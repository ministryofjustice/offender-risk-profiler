
# requires pathfinder to find risk for terrorism
pathfinderapi.endpoint.url=https://dev.pathfinder.service.justice.gov.uk
elite2api.endpoint.url=https://prison-api-dev.prison.service.justice.gov.uk
nomis.auth.url=https://sign-in-dev.hmpps.service.justice.gov.uk/auth
prisoner.alerts.api.endpoint.url=https://alerts-api-dev.hmpps.service.justice.gov.uk

# localstack - run local with docker compose, local-embedded - tun for integration tests
sqs.provider=localstack

sqs.rpc.queue.url=http://localhost:4566/000000000000/risk_profiler_change

sqs.events.queue.name=events
sqs.events.endpoint.url=http://localhost:4566
sqs.events.endpoint.region=eu-west-2
sqs.events.aws.access.key.id=foo
sqs.events.aws.secret.access.key=bar

sqs.events.dlq.queue.name=events-dl
sqs.events.aws.dlq.access.key.id=foo
sqs.events.aws.dlq.secret.access.key=bar

logging.level.com.amazonaws.util.EC2MetadataUtils=error
logging.level.com.amazonaws.internal.InstanceMetadataServiceResourceFetcher=error 



# localstack - run local with docker compose, local-embedded - tun for integration tests
s3.provider=localstack
s3.endpoint.url=http://localhost:4566

s3.aws.access.key.id=foo
s3.aws.secret.access.key=bar
s3.endpoint.region=us-east-1

s3.bucket.name=testbucket
s3.path.pras=${s3.bucket.name}/pras
s3.path.ocg=${s3.bucket.name}/ocg-data
s3.path.ocgm=${s3.bucket.name}/ocgm
s3.path.viper=${s3.bucket.name}/viper