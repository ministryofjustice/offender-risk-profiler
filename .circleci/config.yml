defaults: &defaults
  working_directory: ~/app
  docker:
  - image: circleci/node:10.15.0-browsers

deploy_container_config: &deploy_container_config
  docker:
  - image: ${ECR_ENDPOINT}/cloud-platform/tools:circleci
    environment:
      GITHUB_TEAM_NAME_SLUG: categorisation-tool

install_aws_cli: &install_aws_cli
  run:
    name: Set up aws
    command: |
      sudo apt-get --assume-yes install python3-pip
      sudo pip3 install awscli
      $(aws ecr get-login --region eu-west-1 --no-include-email)

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run: ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle

  copy_image_to_ecs:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker
      - *install_aws_cli
      - run:
          name: publish image to ecs
          command: |
            jar xvf build/libs/offender-risk-profiler-*.jar BOOT-INF/classes/META-INF/build-info.properties
            API_VERSION=$(grep 'build.version=' BOOT-INF/classes/META-INF/build-info.properties | awk -F= '{print $2}')
            rm BOOT-INF/classes/META-INF/build-info.properties

            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker pull mojdigitalstudio/offender-risk-profiler:$API_VERSION

            docker tag mojdigitalstudio/offender-risk-profiler:$API_VERSION "${ECR_ENDPOINT}/digcat/offender-risk-profiler:${CIRCLE_SHA1}"
            docker tag "${ECR_ENDPOINT}/digcat/offender-risk-profiler:${CIRCLE_SHA1}" "${ECR_ENDPOINT}/digcat/offender-risk-profiler:latest"
            login="$(aws ecr get-login --region eu-west-1 --no-include-email)"
            ${login}
            docker push "${ECR_ENDPOINT}/digcat/offender-risk-profiler:${CIRCLE_SHA1}"
            docker push "${ECR_ENDPOINT}/digcat/offender-risk-profiler:latest"


  build_docker:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: ~/app
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Build container and publish to docker hub
        command: |
          jar xvf build/libs/offender-risk-profiler-*.jar BOOT-INF/classes/META-INF/build-info.properties
          API_VERSION=$(grep 'build.version=' BOOT-INF/classes/META-INF/build-info.properties | awk -F= '{print $2}')
          rm BOOT-INF/classes/META-INF/build-info.properties

          # make up a good version name
          TAG=${API_VERSION}.${CIRCLE_BRANCH}
          if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
            TAG=${API_VERSION}
          fi

          docker build --rm=false . \
             --tag "mojdigitalstudio/offender-risk-profiler:$TAG" \
             --label "maintainer=michael.willis@digital.justice.gov.uk" \
             --label "app.version=$TAG" \
             --label "build.version=$TAG" \
             --label "build.number=$CIRCLE_BUILD_NUM" \
             --label "build.url=$CIRCLE_BUILD_URL" \
             --label "build.gitref=$CIRCLE_SHA1"

          if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
            # publish to docker hub as the tag
           docker login -u $DOCKER_USER -p $DOCKER_PASS
           docker tag mojdigitalstudio/offender-risk-profiler:$TAG mojdigitalstudio/offender-risk-profiler:latest
           docker push mojdigitalstudio/offender-risk-profiler:$TAG
           docker push mojdigitalstudio/offender-risk-profiler:latest
          fi


  deploy_dev:
    <<: *deploy_container_config
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - attach_workspace:
        at: ~/app
    - run:
        name: Kubectl deployment dev setup
        command: |
          $(aws ecr get-login --region eu-west-1 --no-include-email)
          setup-kube-auth
          kubectl config use-context dev
    - deploy:
        name: Deploy to dev
        command: |
          kubectl set image -f deploy/deployment.yaml offender-risk-profiler=${ECR_ENDPOINT}/digcat/offender-risk-profiler:${CIRCLE_SHA1} --local -o yaml \
          | kubectl apply -f -
          kubectl apply \
            -f ./deploy/service.yaml \
            -f ./deploy/deployment.yaml

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - build_docker:
          requires:
          - build
          filters:
            branches:
              only: master
      - copy_image_to_ecs:
          requires:
          - build_docker
      - deploy_dev:
          requires:
          - copy_image_to_ecs
